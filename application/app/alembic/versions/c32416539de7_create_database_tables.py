"""create database tables

Revision ID: c32416539de7
Revises: 
Create Date: 2020-08-31 06:34:52.486926

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c32416539de7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Food',
    sa.Column('food_id', sa.String(), nullable=False),
    sa.Column('food_name', sa.String(), nullable=True),
    sa.Column('food_type', sa.Integer(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('food_id')
    )
    op.create_index(op.f('ix_Food_food_id'), 'Food', ['food_id'], unique=False)
    op.create_table('RiskScore',
    sa.Column('risk_score_id', sa.Integer(), nullable=False),
    sa.Column('risk_score_name', sa.String(), nullable=True),
    sa.Column('risk_score_details', sa.String(), nullable=True),
    sa.Column('risk_score_duration', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('risk_score_id'),
    sa.UniqueConstraint('risk_score_name')
    )
    op.create_index(op.f('ix_RiskScore_risk_score_id'), 'RiskScore', ['risk_score_id'], unique=False)
    op.create_table('TestRecording',
    sa.Column('test_recording_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('test_recording_id')
    )
    op.create_index(op.f('ix_TestRecording_test_recording_id'), 'TestRecording', ['test_recording_id'], unique=False)
    op.create_table('TestSurvey',
    sa.Column('test_survey_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('test_survey_id')
    )
    op.create_index(op.f('ix_TestSurvey_test_survey_id'), 'TestSurvey', ['test_survey_id'], unique=False)
    op.create_table('User',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('clinician_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.Column('account_type', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['clinician_id'], ['User.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_User_email'), 'User', ['email'], unique=True)
    op.create_index(op.f('ix_User_user_id'), 'User', ['user_id'], unique=False)
    op.create_table('FoodNutrition',
    sa.Column('food_nutrition_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.String(), nullable=False),
    sa.Column('nutrition_type', sa.String(), nullable=True),
    sa.Column('nutrition_name', sa.String(), nullable=True),
    sa.Column('nutrition_value', sa.Float(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['Food.food_id'], ),
    sa.PrimaryKeyConstraint('food_nutrition_id'),
    sa.UniqueConstraint('nutrition_type', 'food_id', name='nutrition_type_food_id_unique')
    )
    op.create_index(op.f('ix_FoodNutrition_food_nutrition_id'), 'FoodNutrition', ['food_nutrition_id'], unique=False)
    op.create_table('HealthRecord',
    sa.Column('health_record_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('waist_circumference', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('blood_pressure_medication', sa.Boolean(), nullable=True),
    sa.Column('physical_exercise_hours', sa.Integer(), nullable=True),
    sa.Column('physical_exercise_minutes', sa.Integer(), nullable=True),
    sa.Column('smoking', sa.Boolean(), nullable=True),
    sa.Column('vegetable_fruit_berries_consumption', sa.Boolean(), nullable=True),
    sa.Column('systolic_pressure', sa.Float(), nullable=True),
    sa.Column('fasting_blood_glucose', sa.Float(), nullable=True),
    sa.Column('hdl_cholesterol', sa.Float(), nullable=True),
    sa.Column('triglycerides', sa.Float(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('date_deleted', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ),
    sa.PrimaryKeyConstraint('health_record_id')
    )
    op.create_index(op.f('ix_HealthRecord_health_record_id'), 'HealthRecord', ['health_record_id'], unique=False)
    op.create_table('Meal',
    sa.Column('meal_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('blood_glucose', sa.Float(), nullable=True),
    sa.Column('food_predictions', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('date_deleted', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ),
    sa.PrimaryKeyConstraint('meal_id')
    )
    op.create_index(op.f('ix_Meal_meal_id'), 'Meal', ['meal_id'], unique=False)
    op.create_table('Profile',
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('ethnicity', sa.Integer(), nullable=True),
    sa.Column('family_history_diabetes_non_immediate', sa.Boolean(), nullable=True),
    sa.Column('family_history_diabetes_parents', sa.Boolean(), nullable=True),
    sa.Column('family_history_diabetes_siblings', sa.Boolean(), nullable=True),
    sa.Column('family_history_diabetes_children', sa.Boolean(), nullable=True),
    sa.Column('high_blood_glucose_history', sa.Boolean(), nullable=True),
    sa.Column('high_blood_pressure_medication_history', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ),
    sa.PrimaryKeyConstraint('profile_id')
    )
    op.create_index(op.f('ix_Profile_profile_id'), 'Profile', ['profile_id'], unique=False)
    op.create_index(op.f('ix_Profile_user_id'), 'Profile', ['user_id'], unique=True)
    op.create_table('RiskScoreValue',
    sa.Column('risk_score_value_id', sa.Integer(), nullable=False),
    sa.Column('risk_score_value', sa.Integer(), nullable=True),
    sa.Column('risk_score_id', sa.Integer(), nullable=False),
    sa.Column('diabetes_risk_value', sa.Float(), nullable=True),
    sa.Column('diabetes_risk_info', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['risk_score_id'], ['RiskScore.risk_score_id'], ),
    sa.PrimaryKeyConstraint('risk_score_value_id'),
    sa.UniqueConstraint('risk_score_value', 'risk_score_id', name='risk_score_value_risk_score_id_unique')
    )
    op.create_index(op.f('ix_RiskScoreValue_risk_score_value_id'), 'RiskScoreValue', ['risk_score_value_id'], unique=False)
    op.create_table('FoodItem',
    sa.Column('food_item_id', sa.Integer(), nullable=False),
    sa.Column('meal_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.String(), nullable=True),
    sa.Column('food_item_count', sa.Integer(), nullable=True),
    sa.Column('volume_consumed', sa.Float(), nullable=True),
    sa.Column('bounding_box_start_x', sa.Float(), nullable=True),
    sa.Column('bounding_box_start_y', sa.Float(), nullable=True),
    sa.Column('bounding_box_end_x', sa.Float(), nullable=True),
    sa.Column('bounding_box_end_y', sa.Float(), nullable=True),
    sa.Column('new_food_type', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('date_deleted', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['Food.food_id'], ),
    sa.ForeignKeyConstraint(['meal_id'], ['Meal.meal_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('food_item_id')
    )
    op.create_index(op.f('ix_FoodItem_food_id'), 'FoodItem', ['food_id'], unique=False)
    op.create_index(op.f('ix_FoodItem_meal_id'), 'FoodItem', ['meal_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_FoodItem_meal_id'), table_name='FoodItem')
    op.drop_index(op.f('ix_FoodItem_food_id'), table_name='FoodItem')
    op.drop_table('FoodItem')
    op.drop_index(op.f('ix_RiskScoreValue_risk_score_value_id'), table_name='RiskScoreValue')
    op.drop_table('RiskScoreValue')
    op.drop_index(op.f('ix_Profile_user_id'), table_name='Profile')
    op.drop_index(op.f('ix_Profile_profile_id'), table_name='Profile')
    op.drop_table('Profile')
    op.drop_index(op.f('ix_Meal_meal_id'), table_name='Meal')
    op.drop_table('Meal')
    op.drop_index(op.f('ix_HealthRecord_health_record_id'), table_name='HealthRecord')
    op.drop_table('HealthRecord')
    op.drop_index(op.f('ix_FoodNutrition_food_nutrition_id'), table_name='FoodNutrition')
    op.drop_table('FoodNutrition')
    op.drop_index(op.f('ix_User_user_id'), table_name='User')
    op.drop_index(op.f('ix_User_email'), table_name='User')
    op.drop_table('User')
    op.drop_index(op.f('ix_TestSurvey_test_survey_id'), table_name='TestSurvey')
    op.drop_table('TestSurvey')
    op.drop_index(op.f('ix_TestRecording_test_recording_id'), table_name='TestRecording')
    op.drop_table('TestRecording')
    op.drop_index(op.f('ix_RiskScore_risk_score_id'), table_name='RiskScore')
    op.drop_table('RiskScore')
    op.drop_index(op.f('ix_Food_food_id'), table_name='Food')
    op.drop_table('Food')
    # ### end Alembic commands ###
